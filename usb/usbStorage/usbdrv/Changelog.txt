Этот файл документирует изменения только в firmware драйвера USB для AVR
микроконтроллеров Atmel. Новые записи всегда добавляются в конец этого файла.
Прокрутите вниз до конца, чтобы посмотреть самые свежие изменения.

2005-04-01:
  - Реализована endpoint 1 как interrupt-in endpoint.
  - Все опции конфигурпции перемещены в usbconfig.h, который не является частью 
    драйвера.
  - Изменен интерфейс для usbVendorSetup().
  - Исправлена совместимость с ATMega8.
  - Различные мелкие оптимизации.

2005-04-11:
  - Изменен интерфейс для приложения: теперь используются usbFunctionSetup(), 
    usbFunctionRead() и usbFunctionWrite(). Добавлены опции конфигурации
    для выбора - какие из этих функций компилировать.
  - Модуль с ассемблерным кодом теперь доставляет данные не инвертированными.
  - Имена регистров и битов сделаны совместимыми с бОльшим количеством чипов AVR.

2005-05-03:
  - Разрешен адрес usbRxBuf на любой странице памяти, чтобы буфер не пересекал 
    границу страницы в 256 байт.
  - Улучшена совместимость с чипами: теперь код работает на Mega88.
  - Оптимизация кода в модуле отладки..
  - Обновление документации.

2006-01-02:
  - Добавлены (свободные для использования) инентификаторы по умолчанию Vendor- 
    и Product-ID, купленные на voti.nl.
  - Добавлен файл USBID-License.txt, который задает правила для бесплатного использования
    предоставленных в общее пользование пар VID/PID.
  - Добавлен файл Readme.txt в папке usbdrv, который поясняет административные вопросы.

2006-01-25:
  - Добавлено "сконфигурированное состояние" для бОльшей совместимости со стандартами.
  - Добавлено состояние "HALT" для interrupt endpoint.
  - Driver теперь проходит тест "USB Command Verifier" с сайта usb.org.
  - Сделана опция конфигуроции "serial number".
  - Незначительные оптимизации, мы теперь рекомендуем опцию компилятора "-Os" для достижения
    наилучших результатов.
  - Добавлен номер версии в usbdrv.h

2006-02-03:
  - Новая конфигурационная переменная USB_BUFFER_SECTION для секции памяти, где расположен
    буфер USB rx. По умолчанию ".bss", если специально не задано. Поскольку этот буфер
    НЕ ДОЛЖЕН пересекать 256-байтные страницы (not even touch a page at the
    end), пользователь может пожелать передать линкеру опцию наподобие 
    "-Wl,--section-start=.mybuffer=0x800060".
  - Предоставлена структура для usbRequest_t.
  - Новые операторы define для констант USB.
  - Подготовлена реализация HID.
  - Увеличен лимит размера данных для передач по прерыванию до 8 байт.
  - Новый макрос usbInterruptIsReady() для опроса состояния буфера прерывания.

2006-02-18:
  - Теперь удостоверено, что токен данных, который отправляется как ack (подтверждение) 
    на передачу OUT, всегда имеет нулевой размер. Это исправляет баг, в котором хост 
    сообщает об ошибке после посылки передачи out в устройство, несмотря на то, что
    все данные достигли устройства.
  - Обновлена документация в usbdrv.h для отражения изменений API в usbFunctionWrite().

* Релиз 2006-02-20

  - Включены предупреждения компилятора, когда отладка включена.
  - Добавлены изменения от Олега Семенова для совместимости с IAR-cc.
  - Добавлены новые (добавочные, необязательные) функции usbDeviceConnect() и usbDeviceDisconnect()
    (еще раз спасибо Олегу!).
  - Рассортированы тесты в usbPoll() для экономии нескольких инструкций в случаях, когда 
    не ожидаются какте-либо действия.
  - Нам нужна задержка между запросами SET ADDRESS, пока новый адрес не станет активным. 
    Эта задержка обеспечивается пока в usbPoll(). Поскольку спецификация говорит, что 
    задержка не должна превышать 2ms, предыдущие версии требуют агрессивного опроса
    во время фазы энумерации. Мы переместили обработку задержки в обработчик прерывания.
  - Мы не должны отвечать NAK на транзакцию SETUP. Этого можно добиться только убедившись,
    что буфер rx пуст, когда ожидается токен SETUP. Мы поэтому не передаем пакеты данных 
    нулевого размера на фазе статуса передачи в usbPoll(). Это изменение МОЖЕТ создать проблемы,
    если Вы надеетесь на прием пакета длиной менее 8 байт в usbFunctionWrite() для 
    идентификации окончания передачи. usbFunctionWrite() НИКОГДА не вызывается с нулевой длиной.

* Релиз 2006-03-14

  - Улучшена поддержка IAR C: модель памяти tiny, большее количество чипов.
  - Добавлен файл шаблона usbconfig.h под именем usbconfig-prototype.h

* Релиз 2006-03-26

  - Добавлена поддержка на одну больше interrupt-in endpoint (endpoint 3).
  - Добавлена поддержка одной interrupt-out endpoint (endpoint 1).
  - Добавлен макрос управления потоком (flowcontrol) для USB.
  - Добавлена поддержка пользовательских конфигураций дескрипторов.
  - Теперь можно использовать ЛЮБЫЕ 2 ножки порта для сигналов D+ и D-.
  - Совмещен (опционально) номер конечной точки приема (receive endpoint number)
    в глобальной переменной usbRxToken.
  - Используется USB_CFG_IOPORTNAME вместо USB_CFG_IOPORT. Мы теперь строим имя переменной
    из одной буквы порта вместо вычисления адреса связанных портов из адреса порта вывода.

* Релиз 2006-06-26

  - Обновлена документация в usbdrv.h и usbconfig-prototype.h для отражения в ней новых
    возможностей.
  - Удалены директивы "#warning", потому что IAR их не понимает. Вместо этого для генерации
    предупреждений применяются неиспользуемые статические переменные.
  - Не включается <avr/io.h> при компиляции с IAR.
  - Представлены USB_CFG_DESCR_PROPS_* в usbconfig.h для конфигурирования того, как должен 
    обрабатываться каждый USB дескриптор. Теперь можно обеспечивать данные для дескрипторов
    в памяти Flash, RAM или динамически во время выполнения (runtime).
  - STALL теперь статус в usbTxLen* вместо сообщения. Мы теперь можем удовлетворить спецификации
    и убрать ожидание опроса статуса, пока он не будет очищен.
  - Переменные usbTxPacketCnt1 и usbTxPacketCnt3 сделаны публичными (public). Это позволило
    коду приложежния сбрасывать данные при срабатывании прерывания (в его коде).

* Релиз 2006-07-18

  - Добавлено '#if !defined __ASSEMBLER__' для предупреждения в usbdrv.h. Это устранило
    ошибку ассемблера.
  - usbDeviceDisconnect() теперь управляет верхним (pull-up) нагрузочным резистором 
    для получения высокого сопротивления.

* Релиз 2007-02-01

  - Кое-где в коде слиты вместе улучшения по размеру от usbtiny (благодарю Dick
    Streefland за эти оптимизации!)
  - Специальное требование к выравниванию теперь не нужно. Снова благодаря
    Dick Streefland!
  - Возврат к "#warning" вместо примениния свобожных переменных static -- новые версии
    IAR CC поддерживают эту директиву.
  - Изменена лицензия Open Source на GNU GPL v2 для того, чтобы проще было использовать
    другие свободные библиотеки. Мы больше не требуем публикацию принципиальных схем,
    но ОЧЕНЬ рекомендуем это делать. Если Вы улучшили драйвер самостоятельно, пожалуйста
    предоставьте нам свободную лицензию на Ваши изменения, даже если Вы применяете 
    коммерческую лицензию.

* Релиз 2007-03-29

  - Новая конфигурационная опция "USB_PUBLIC" в usbconfig.h.
  - Установлена версия USB 1.10 вместо 1.01.
  - Найдены противоречивыми USB_CFG_DESCR_PROPS_STRING_DEVICE и
    USB_CFG_DESCR_PROPS_STRING_PRODUCT. Изменены все вхождения 
    USB_CFG_DESCR_PROPS_STRING_PRODUCT.
  - Новый ассемблерный модуль поддерживает тактовый генератор RC 16.5 МГц 
    с фазовой автоподстройкой частотв (PLL) в коде приемника.
  - Новый ассемблерный модуль для кварцевого генератора 16 МГц.
  - usbdrvasm.S содержит только общий код, а части, зависящие от тактовой
    частоты перенесены в usbdrvasm12.S, usbdrvasm16.S и usbdrvasm165.S соответственно.

* Релиз 2007-06-25

  - Модуль 16 МГц: делается проверка SE0 in stuffed bits as well.

* Релиз 2007-07-07

  - Задана функция hi8(x) для компилятора IAR, чтобы ограничить результат 8 битами. Это
    нужно для отрицательных величин.
  - Добавлен модуль 15 МГц, пожертвованный V. Bosch.
  - Теперь можно конфигурировать имя вектора прерывания. Это удобно для тех, кто хочет 
    использовать другое аппаратное прерывание (не INT0).

* Релиз 2007-08-07

  - Перенесен обработчик handleIn3 в файле usbdrvasm16.S на диапазон относительного 
    перехода (relative jump).
  - Еще добавлены опции: USB_RX_USER_HOOK(), USB_INITIAL_DATATOKEN,
    USB_COUNT_SOF
  - USB_INTR_PENDING теперь может быть адресом памяти, не просто I/O

* Релиз 2007-09-19

  - Разделены общие части ассемблерных модулей в отдельные включаемые файлы
  - Номера endpoint сделаны конфигурируемыми, таким образом, что могут соответствовать 
    установкам интерфейса. См. USB_CFG_EP3_NUMBER в usbconfig-prototype.h.
  - Сохранение номеров endpoint для interrupt/bulk-out, теперь usbFunctionWriteOut()
    может поддержать любое количество конечных точек.
  - Заданы usbDeviceConnect() и usbDeviceDisconnect(), даже есмли even if не задено
    USB_CFG_PULLUP_IOPORTNAME. В этом случае D+ и D- в 0 устанавливаются напрямую.

* Релиз 2007-12-01

  - Оптимизированы usbDeviceConnect() и usbDeviceDisconnect() для уменьшения размера кода
    когда USB_CFG_PULLUP_IOPORTNAME не задано.

* Релиз 2007-12-13

  - Переименованы все ассесблерные модули, которые только включаемые, из *.S в *.inc 
    так, чтобы люди не добавили их к их проектным исходным файлам.
  - Распространение прыгающих бит в цикле tx более частое для модуля 16 МГц.
  - Используется "macro" и "endm" вместо ".macro" и ".endm" для IAR
  - Избегаются предупреждения компилятора для диапазона выражений констант путем
    преобразования некоторых величин в дескрипторы USB.

* Релиз 2008-01-21

  - Исправлен баг в модулях 15 и 16 МГц, где новый адрес устанавливается с 
    SET_ADDRESS и ужн принят в следующем посылаемом NAK или AC, не на
    следующем посылаемом пакете данных. Это вызывает проблемы, когда хост опрашивается
    слишком быстро. Благодарности Alexander Neumann за помощь и отладку!

* Релиз 2008-02-05

  - Исправлен баг в модуле 16.5 МГц, где регистр используется в обработчике
    прерывания до того, как он сохранен в стеке. Этот баг появился в версии
    2007-09-19, когда общие части перенесены в отдельный файл.
  - Оптимизирована программа вычисления CRC (благодарности Reimar Doeffinger).

* Релиз 2008-02-16

  - Удалены устаревшие участки кода, ранне добавленные для совместимости с IAR.
  - Добавлен hook-макрос для USB_RESET_HOOK() и USB_SET_ADDRESS_HOOK().
  - Вставлена опциональная подпрограмма usbMeasureFrameLength() для настройки
    внутреннего RC-генератора.

* Релиз 2008-02-28

  - Умолчания USB_INITIAL_DATATOKEN теперь в USBPID_DATA1, который означает старт
    с отправкой USBPID_DATA0.
  - Изменены умолчания в usbconfig-prototype.h
  - Добавлены свободные для использования пары USB VID/PID для класса устройств MIDI
  - Реструктурирован AVR-USB как отдельный пакет, не как часть PowerSwitch.

* Релиз 2008-04-18

  - Реструктурирован по смыслу usbdrv.c для улучшения читабельности.
  - Улучшена оптимизация кода с gcc 4.
  - Если разрешено второе прерывание в endpoint, оно также добавляется в описатель
    конфигурации.
  - Добавлена опция конфигурации для длинных передач (более 254 байт), см.
    USB_CFG_LONG_TRANSFERS в usbconfig.h.
  - Добавлен модуль 20 МГц, пожертвованный Jeroen Benschop.

* Релиз 2008-05-13

Перевод: microsin.ru
